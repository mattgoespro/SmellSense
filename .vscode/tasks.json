{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "adb: launch virtual device",
      "detail": "Launch a virtual device.",
      "type": "shell",
      "command": "emulator",
      "args": ["-avd", "medium_phone"],
      "isBackground": true,
      "group": {
        "kind": "test"
      },
      "presentation": {
        "panel": "dedicated",
        "group": "debug",
        "revealProblems": "onProblem"
      },
      "problemMatcher": [
        {
          "pattern": {
            "regexp": "^.*$",
            "message": 1
          },
          "background": {
            "beginsPattern": ".*",
            "endsPattern": "^(INFO    \\| Boot completed in (\\d+) ms)$"
          }
        }
      ]
    },
    {
      "label": "adb: connect to wifi device",
      "detail": "Connect to a device over Wi-Fi.",
      "type": "shell",
      "command": "./scripts/connect_wifi_device.sh",
      "group": {
        "kind": "test",
        "isDefault": true
      },
      "presentation": {
        "panel": "dedicated",
        "group": "debug",
        "revealProblems": "onProblem"
      },
      "problemMatcher": [
        {
          "pattern": [
            {
              "regexp": "^\\[(.*?)\\] Error: (.*)$",
              "file": 1,
              "line": 2,
              "column": 3,
              "message": 2
            }
          ]
        }
      ]
    },
    {
      "label": "adb: sync db from device",
      "detail": "Sync the SmellSense database file from the device to the project directory.",
      "type": "shell",
      "command": "./scripts/sync_db_from_device.sh",
      "isBackground": true,
      "group": {
        "kind": "test"
      },
      "presentation": {
        "panel": "dedicated",
        "group": "debug",
        "revealProblems": "onProblem"
      },
      "problemMatcher": [
        {
          "pattern": {
            "regexp": "^\\[(.*)\\] Error: (.*)$",
            "location": 0,
            "file": 1,
            "message": 2
          },
          "background": {
            "activeOnStart": true,
            "beginsPattern": "^\\[(.*)\\] Performing initial sync of device db .*$",
            "endsPattern": "^\\[(.*)\\] Press any key to exit\\.\\.\\.$"
          }
        }
      ]
    },
    {
      "label": "build_runner: watch",
      "detail": "Run build runner and watch for changes.",
      "type": "shell",
      "command": "dart run build_runner watch",
      "isBackground": true,
      "presentation": {
        "panel": "dedicated",
        "group": "build",
        "revealProblems": "onProblem"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$dart-build_runner"
    },
    {
      "label": "build_runner: build",
      "detail": "Run build runner.",
      "type": "shell",
      "command": "dart run build_runner build",
      "isBackground": true,
      "presentation": {
        "panel": "dedicated",
        "group": "build",
        "revealProblems": "onProblem"
      },
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$dart-build_runner"
    },
    {
      "label": "flutter: test",
      "detail": "flutter: test",
      "type": "flutter",
      "command": "test",
      "args": ["--coverage", "--no-pub"],
      "isBackground": true,
      "group": {
        "kind": "test"
      },
      "presentation": {
        "panel": "dedicated",
        "group": "test",
        "revealProblems": "onProblem"
      },
      "problemMatcher": {
        "owner": "dart",
        "fileLocation": ["relative", "${workspaceFolder}"],
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+): (.*): (.*)$",
          "file": 1,
          "location": 2,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "dart: fix",
      "detail": "Run dart fix.",
      "type": "shell",
      "command": "scripts/fix.sh",
      "isBackground": true,
      "group": {
        "kind": "test"
      },
      "presentation": {
        "panel": "dedicated",
        "group": "test",
        "revealProblems": "onProblem"
      },
      "problemMatcher": [
        {
          "pattern": {
            "regexp": "^(.*):(\\d+):(\\d+): (.*): (.*)$",
            "file": 1,
            "location": 2,
            "severity": 4,
            "message": 5
          },
          "background": {
            "activeOnStart": true,
            "beginsPattern": "^(.*):(\\d+):(\\d+): (.*): (.*)$",
            "endsPattern": "^$"
          }
        }
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      }
    }
  ]
}
