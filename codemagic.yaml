definitions:
  - &script-check-ads-activated
    name: Checking enabled-status of mobile ads
    script: |
      OUTPUT=$(grep -r "//String get bannerAdUnitId => BannerAd.testAdUnitId");

      if  [[ ! -z "$OUTPUT" ]]; then
        echo "Error: Test ads must be enabled in debug builds.";
        exit 1;
      fi

      exit 0;
  - &flutter-get-packages
    name: "[Flutter] Fetching project pub packages"
    script: flutter packages pub get
  - &cache
    cache_paths:
      - $FLUTTER_ROOT/.pub-cache # Dart cache
      - $HOME/.gradle/caches # Gradle cache
      - $HOME/Library/Caches/CocoaPods # CocoaPods cache

workflows:
  build-android:
    name: Build for Android
    max_build_duration: 60
    environment:
      vars:
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmg1WlhIVWY5Nkg2LWpJeHZlMmVjcXVnNVBNMFlrQ0lqekVCWHdZaGRUcDNtcU9KaXJ4TjhNb0RJeUF4TzdQRWhzajZPaVlHbjhHdjBXWDBmLW4zWVpyQmpSMDQ0eDl3NW5HVFB1MHFuQ1VxVUlxbWJyeWVzc0FJWkJ2YWtlZmFoVy02STFzb1NBNkg1NldUS2ZWdXZCVzVkMGZXYmxLOUp4eFRHcTVHY2xoYVdfT0hsWmpVTFhaQ0R0UWJESVpHWml2SmJ2RGdCZHdiYTVoVDdER0lLTjN4VmVQRDVhSjRiOGFXT3dJTU5RblowTzdOdWhpUlFQWGhsU0FsLVZweURYczI3WFNKT0ZNM19YczFSd3FCVmt2d3g2Ukg3eFlkMjlUUjNuV2IzSUluaF9FbWVzeGh3aDUtcVM5eTVlYldyU1AyNi1lNl82UUFZZjlacTJfYmx0V2h3UEF4ODNBZWx2ZzE5Z1g5NHR1LVc3a3N1SEVmazE0S0VkbnJyZzU0MHkyQjhZWnpGQlhQdzNsY3JaSzhkVVFRTnZEbGxMcG1yeXNVVlhvWWh3ektaUHY2VzhQWnBoYWNEdFlTdjJKYXR2TnUzU1Y1MTdZWDg3eVpSeTk5Rjd2MUpKQ3pXQ25iZGxuY19QNmh2UnA5Q2l3WXJFX3lpMXVuU18yMkhjdFlOeE1VWU1wVTJ4aWlHNFF1Wm9DU1FQTFpKSXNkTXRhVU0xMWFzUzNMQXNRai1LcHVXdGVpcndONUxBX1RHV2lOQXI2VGRMbHVNVTFmc2VMc0ttUHN2aXg4MTlWQmJMbmtwYnBMOVJjc1BWVnNlWDUxRDNBdG82WnBFbFRiSl80THJmSmwxc0xFc2wyME8wTVNoOUsyZGU3eUczWGdHN1ZGV3VJWER5Q3MyakZ2NGlHeEhTTEdnTXhQaEF4TkNEY2NLZnpPT2hjdXgtLXoxOTVjY3ZrOTczVFNEUVcxMzVrN0tWZTZiczlFb2F6WTVXQjlxNmhMR3hqaXBXN25CcmdBcVYwaUVlRjJjTkwtQkY2VVNmU2lKakZ2b0d2S1o1d1lfS1RTZ1IydlM5TWdTeVFLTDZlVWNaYmVoangtajZfOG1NTUU0SG83MUJxa2k5Vkw0RFdieW1FbHV4M1ZncVI5OFRReHozSVFYU3NlYXVKNDFUVEZUS1dSbU95NEJZX0lGNmRxYlQ0OVY4Q2NtX0VkNm8xMS1PUl9sRUdUWUNxeVRfd2p2OVRRODd5bE9DQ0RkZGFPSVU2QWd0Q1FLcWRaSndtYmZzQWtzQjd6Z2F1R3F6Z1U1eFVGWFZ6WE1hNUZYTmptdGN1XzR6SFFSa3ZDTTdJZjJiYUVqN1FEckJaVVBRWm9FakhpeHVibmJsZWtmeml0TVZkTlJyelREWVBMRk44cTBNRmV0ci1kQ3R6bkFhMUEwYWdYLU9jUDQ2TkdiV2lPSFNWZTk3RTBvejN5VjNJbUZxbUNiVEpDbnVMZ2ZneGhocWlyRlFTVzNvMzFVSEVBSW43bVZDNFFha2dVOWVoVVZ4a1A1VERDajkwS0RQTVl1WDQ3Q0RIWF84eVF5MEV1QTduSlVocEhlVmZIeHVxa3BVb2wwQllKOUswbXFvdnUwNURTZEZ0azJwVHhuR3ltYnJ5ZS1MS3VOd1ZKVDJDRWN0R3lkUlZJeUE4TXN2Q0NWWHBKeWJNN2FFMU5fZFpsWlZRbjJuTUFLeVRpa0haNnRaUGxtUGtPMEZGY3Zkd0ppdDlrQUdtX1otdkhmTy1yNTl3MGlFTjFZbm1EY0VDVXlINi0xQW1BcXUxTDFWSm5hTGFFZkVuTnVCRkhmVzF6X3JPYmpMRE5DWjUtYmd0Y0tJNlZwSDQtLWs0N0dsSXhwWnJrRTZld05UbGdnYU9VTjM0Ul9XNTJHamQwU1dpcWhPWGcwbHBhSmNJaEgtRkVnN2YtN3VLeU9KcG1qT0FCMlQycnlGNjJzSkJUUXRyYVpRcDdxTnhvck9KMWtaV0RycTc4MFFTcXlzNW9STlNpMzRDckVpYVRLSVc2UHdaTnJuazRfb1BkeXFFa0NwMzB0ZHBBbTlaSm5jcVF6cGpPQ21tb0JLM1JUS1JNRTROdmVDT1ZnT0s1OXQtN0FFTjRQZkhOZ3pwQlpwTG53bUFZa1hseTNuWHVMTkR4emNXOVgzaXlqT3JESWRDbE1ESDdhN3FTd0c5Q0lJNUZ6aUZlTUxTTTE2R1pzYWdnYU1hLUFQWnhhLWNpMGxFMldWRVBJaFNRdHotS3FIR1dJNGh4R0NzTExtUDhLZFlXWDFNZ1ZRalg3OVRYT0N3X1RMdEljU0VGUHBJRW5MaDVUUnNrTE9pc1hIaW9MZVlrc1NJRkktU25sTTl4VGlfakVheDNoU0hxdVRvV2d4bFFJOUpTUlhndU1OQzVMRnM5WTNCVGJYaXltUEx5cjVIa1RvMzZ1QWNYV21oM3MyS1MxSFlPQWRkSUZxSnJJbHBRU2ptQ0Nad2ZPODFCQl9lZE9zc1JOTUxXcllpSzIwWW1oWlZoV3E1eXQ3cTB1VDdJYlBVbFZ4Vng0bU5ETkRrdHZzYU42VWhuTVFuYkNvT3NVXzlRRDBwZnliUmRZMlF3WnB0Y25ZNklFY1hPTTM5UFpxMVNRQjhaU2RDVVlORUlJSlR0RlZDOFhzdkV3bDZuRnNYblRHdDJnbkF0cHpKNGpBd0s4YmhlQ3ZoblpMcG5udG1JV25HV3NOai14QW1WRWtqLUZSdXV3NWRoUUlUblluTXNTTmh0VmV0eTl0WEVqb0dmTlplTThRN2dLMTBKSHFTdFFQRGZvVUppb2JKQlhIbE9LdVhRcDd1NVhFSzlHLTFIaVRPVUVENmhsYko1T09ncnRGczJvaW4zcFcxSkZrN0NvMjVfY3A3T1pQR0N0YVJpTHRGTDllNldXQ3VJTUVIWW9MY0FFUGVFZWxyYTdZSUlWTDY5aDFXalZ5eTNJR0lCcUs0WHFQZXJXWER4WWdmTGZ6NkV0ZnlxX2RsWno5TnluUG1zSHFJeGVZX3U4TTdGZTBHZWlGUW8tN1ZDeXNCRThReGtucTJMRFVMVFNGVEtyQlRfUzlCcnI1bWJnNkdnSDB4MHMyRmlaOE51NHRGQnRDSGdtbEJZR01tYW9waVlzbTBGZmZBa0VMV2RmMERIeU80VkJ5NDctQ2UteDhSRGgwR1ZXT0MtMkloWnhITW1oOWQteFhneHQzZUh4WDh2ZE1WMEc0clc0NThpS281SGZqeEZvckZnVmJ0WVRiaHd0T1BBNkVlNzhfZTQ3d2VnbUJubmhpcUE1ZnI5VDBMTFEzU0NFbmJXQWFJckJMWERHckFSMVZrM2xUMXVOSGtRdDRCVnFSWEEtd0h2WlVEZUZRalpFWnVEOFlzWnVxOFdLQlIybkJ1bGcyZTE2YzRlWVNuZlc4b0ZIQTJTakRxZGoxUzNwTmFTVmk0Y3YtazVjT1M0SzhQT01pYWdnYk1Kdk1xcmczeDhTT210c05zS0NDaGFKemlrM3J2WFpqSHhuWWliLXl4NHZwZ3R1QjRzQUpDR01CUXp3cGd1LXVqNHdtSVlfMWptQ1loRDFSaW85TkNWaEdleXRZbC03QVFoc3E2dDEzczhJOTNjUVBXek5ydjdBNGlBdHpOUDlXWWpvdlN5MGZIa2ZQdHZDNmJTUElkRU53VUZ3UEN5MkFLSXEtRkJxNzI4eDZIWDdOdEtFSXY2TFg2WklaU25HWU1DM0toVWR1MTNyZ184NjdYRzE0T21DSjJFajdwNEtXa0dxR2VQYjVjR1dOS29CSUc3N1Z1VHN0elVuX01RQnBSNXMzMWw2WTZjeWdndGNWMWlsYXltRWRUS2QzNlpPbXd4QkRDMmw3SmNhUi1TT2FEWWZuM1pfSUFLSDVSUXdfMXMzOGpVekxweC1QSXVsTXNpM2s0X0ZYWXgxeTlrbm9VSHpsQlpVZ25icWFLNlRxNjJmVi02OGtkZ2tLdl9sSFc2N1dWZGc1ZzBKR05xMG1KcXZWUzVOZUhVakFuQnJLcmxkYjJ0WGFST0tyYl9KNEtiM1NSeEgyZmppb3VjUE9yUnNOeTdFOTdIOExCeVZIeklqNHozMklnR3ZlTUxjX0JZajRhY2lCQ2g4UEotU1VXUW9xcXcxQ09yenBjTjkwOGRRWHJuNmU5U1lhRk1Cc2xTMG51SXk5cXZoVXlIcHZwY2ViejFOdnlienhGODlCc2tmNkhjaEQtZDgwUVd6NmFNYWl0dlFveGJTd1RGT1FEODlIWkhjdlJBbEJKQ045N1ZEOWthSzBTblJ5Q2lndW9LVTQzcHVheTY1YmoyWHMtalMtdlRCOWZTUHNydVRKTWR1VWN6NW8wTXNYcHIzUzZmWklqYkI4TE93SWhMbmlWa3Z0SGt4WUgtc2xSSVV0ZzU0U1ZIR1MtbVBlOXczOHhNdU5xWllMd2FaaEc1QmUzWm5iTUpOcEdlemRRTjU0eWtxRU9jeUJXdWVJRzktRjVnNHZuWVJTSUZObWZrSUp0ek1YRk95UXlhaEJHckFYNHF5dkJEM0dLek9mZUZuM0ZRT0RuMjVaQXRYVDZkNXBUMlhFNVY1TEVFRnZkSnZPQXZTeTRnUldRc3BwcXhTN0RkcHhkUlpxNnZ0cTNXWGluM2tHRVJNdnQwVTNxdm9zSGhodldkb201MzFCMVFSRExKUHc0SmNMUldXRTJUbDVGcVNrbWwwZzJRc3FJTEIxNVg3a1VQU2tNY1NRNUtVYTVZZmZXWUNheWNWWUcxTjM4c213bkZLS0pXQzRaQzd4N01ld2o5Q0Z2TzN4aHZzT0JWU1Y5NmppVWRfOU1fd0hLN2J6WDNSRnpNQ2Z4S1pidGZnSGVlQmgwX2pSYTlsbmNnM2k3blEzaXhMYXFiNXAzNnEtZ1Q2U3ZBY1FyZXhweUloQXNGbEhNeFFhTUVLa3dpRHQ5WC1UOEV6Y19JTFlfVGJ6UkpqZTFuV25aeGN0LVJqYUt1d3Q4LU9xREY1NmZlSkFMTWxKQnZoYmpIYzU3RU1EWk5LNXAyR2hvN3NQQlhsN3A4cHV6OVEzVk5zTW9uWnBnQTlENU1YX2diUmxSdlVzczZWOUZUY2E2bDBPQUVpNWdNTnAxd1Boa3g2YnlSdHdzTmx3XzJNYS1Jdm5hUW9wY29wNk9lWlBuOW9IVVpsdFNvVDFmMDNtakU0aHYxcVNLbldHZGM4QlZxUGUteDFrTHpTaGNoZnVIUUVBMDlsQ2pDTlhwX1lPVS12VXFFRHFIWFR6OENXdmNQQUhKSlM3X3JfZDlPR1BYcHpobXB3OXhaOEtnSEJtWDE3TEFNM3dZQkJtSWh5SzJ5RjZLWF9GQUpoQnhXQnRodmoxWXhwWHNGSmV0dz09)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmg1WlhIa1pPaW5iZkNMS0o4TzN5MVEzWTB0QWZTbFpDenQtMEJRZHpIVmhwdzJVT0ZOcmRWWUVUWU5sMi0wVXM5UndZYlBZNHN5MnhuVm96THkwMEE5dE9zVmc9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmg1WlhILXItSUhRWWc4NV9fZGFtWXEyOEV4Um9SbDBwMF9IQS0yLWZxZzdjMHh0Vm5VblM1SHpjOUcxZVN3QWF5ZGVhX3lFY1VBOXJGdG1KZU5idU9kSjdReXc9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmg1WlhIeUZHT0M1NEhnOXBXOGpCRVpJZkFuTGhIQUNIMmRBekt1dUlCZzE0bnQ2b09scjVHZDRDTWhKbFMtNWFYejNLVEU2WHQ1c3VrUjZpall1OXJ3NWRKaFE9PQ==)
      flutter: stable
      xcode: latest
      cocoapods: default
    cache: *cache
    scripts:
      - *script-check-ads-activated
      - name: "[Android] Setting up code signing"
        script: |
          echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
          cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
          storePassword=$FCI_KEYSTORE_PASSWORD
          keyPassword=$FCI_KEY_PASSWORD
          keyAlias=$FCI_KEY_ALIAS
          storeFile=/tmp/keystore.keystore
          EOF
      - name: "[Flutter] Setting up SDK paths"
        script: echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - *flutter-get-packages
      - name: "[Flutter] Building app bundle"
        script: flutter build appbundle --debug
    artifacts:
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - "*.snap"
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - mattyoung305@gmail.com
  build-ios:
    name: Build for iOS
    max_build_duration: 60
    environment:
      vars:
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmg1QlNpRnBoUFdRbDNhRFhYa2tzQ2pmWHNxLXNGWFdfeUtXQkgwZzBLSEZPcGFxN1ZhVE4xcU1GMzRCTzEtN2dfdmNOajJCWkNjaTFQZFFJTURaTm5wNkozbFE9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmg1QlNpVENYT2p5eTFzeUhjZHJoaWRrektCc01MUTFsTTV1bndYZk9MVTJkYXJhOHZHNWlSQ3Nndzl0eWtNUmk1NDN0MW5BTWc0LVcxdHNUb1JqLXBGY0NDUGc9PQ==)
        FCI_KEYSTORE_PATH: Encrypted(Z0FBQUFBQmg1QlNpbHBDVjRRRzIxeDIyX1I4ajdRRVRpLXFONG1pRl9OQURPZU5Ga0VZaE5IeUFkaER1QmJjNXhkRDhBY24zenBwTHdxc2dDUExPRmVXdE14RW1lcmxkSTdiNmtWTmhBS0wyMHdzVVpEUEtpR3M9)
        APP_STORE_CONNECT_ISSUER_ID: 904d6bcc-e5a1-4213-90c4-7ff8cf5d303e
        APP_STORE_CONNECT_KEY_IDENTIFIER: D794H835AC
        APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmg1QlNpT1M1V01tTlNkQktCcldJRTgzS25HZzhJaTJGRGo1TGJ3V29yTUFGemJuV2FQTTdxNFVra0VrUVJUd1VTbS04UlJQRVNoYzRLYmdoSC1QTGoxeGdtMjZkZjU5RGVqT2tSbW5RdGV6QzUzOERuN1Z0ZjgzZXdKMkhzY0ZxWnYxM1R0VTc4RnM3MEROWTBhdTZjSEJodFJHVmpDeFE3ZUhNY2lRVU5MNkU5aGVQTmZPVm8yWFNfam1hN3Z3VHVqV2pRTjhPTmdPb1ZLTTlQbUJBVlFIclZiN1RTUkxQZEN1RWxoQXBudTNwZFN1MGhTRFhPUHBVbnFmeUgxTTZRYVR3VllCN3hYcmQxRFkyaTZtVkNoVHUtampVZk9zM2RPc0dwclpMQWhRV3puTVJGSTFRRlA5cVk3MzhwSFpfaS1BRHUwT0Q4Slk1QVhGR2dYZnVxSDlzaFR6bDZPY2wtNFBJYVpOaGlGNGVHWmNnOURDWER6RGRpVnVnYkVnSU5jZVZHVGNob3hfNE8xWG12U1A3a0h3M1FqbVpwaFVxM0VlZ3p4R3oxakwyMVF2QT0=)
        CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmg1QlNpcXNiNUlzNGcwWWM0VktpVFZhNVF2WUNmeGk5QTlUUGVDUFR4QmdydTdCTTQweV9KaTNGM2xuX3MybkxxU0ZWODZ0bG91Z3p4bWZqV1h6ck5OTUloNEgtd1U5YU1kdDZDTkhlY3NnSGk4Ymh6Sl9mekZsUUFwcGc5XzV6Smd0ZkdCU05XbmVhUlg1RlJqMXpRMGNjdlR2eHhYOFdhN28teXg0Ymh1ckVMREd5OERRdGxDekFmQWxNcVp2ZThXb2NRMjdRdy1ZVW9IdkNiaEFxbG5sZzNrYzJpeHl1enpydlB0N1NOdkZSbzlScXpIQ3B3azhpM1ZTWXgwelJPN0dHWlZUWEpLMlRZTENBY2NBVVRWLXc5bkZFakdUSGVzT1ZfalkzX1VjcXNBcGdXbjZXWXF2TzdhdzBQTVdVdjJTRG5XUVotNkJjVVVMUTVqZ2NFbkN6Si1aY1NPX3dHZ3lLSG5INnNGMWFzbFowc0wtYkotMy00aG5ybUJyNUpDOVFCVlVOQ0lmRVV6UHNyUUxjci1xankwc2FzQVZSaEdEb01vV00tQmZ0dkNZZmVKMHlabERNZU1kWEZYZTd6ejdCbVMyNndwX3VScWNydDNudElGMlJ3QnZQV1dhaWY4NlN0dG1WRmhxeUw5bkhrOXYtY012VGVROUNrdXRzSkdGRFB3MFVtOEdsQkJWOGpKYWhuOGNoaGhvYkNiSV9CT28wcHVlRHMtZEdsQ2RMdzlZbXBWSUZqZDFpS1lKNDJsbHhSeU8xOWc4bkxNc1plRV9VbVFwT3RXZFBKWkR2ZGJhd2xqVmptYnZCS29GWVAtZmJya0czUkxiRzFlZVZhRFlBRnhXZEQ1VDdKUjhURjZYY29DTS04bEdEU2R0SGdKQUdQT1ZJMFVrLTR6QlQ4VjA2ekgxemZKSjNnSnc5Z3NQNkdaS0JwV2NUMV80OXBuVlhEX3RuRnYtWDJxSXdyTDJIYjRQN0JRYlBZVWdsWnR6NmZ3cmJCZHFnWFV3bXFtZzRhRlg4Ynp1WUJxX0JhMk1qcjEyT3VEenRnZE9GOG1jSEluT193Rk9mV050cUw3WTlXTURKeDQzZS1qMy11Q3ZKWVVIZFJrNDFvWmxuSTFSZm9UUHRZT1FXM1EzSjBIYjE2OWdpNkZNQ3FwN2VQbzBUNjltV1p3UnlzYmg2TWRLYU9tOTU4QjZYTDQzcVBRTzk1dWhITEZ2Z0tsWDNxYVJwa0N1VWY3WUZpV0NON0prTzZ5M1hBLUdQQ012TUk2UjFxWWl3ZkZVcUxXd01SODhEelluZWdOb0hJUUVuOWU3Q0RIVkRtNC1sNnBqS1dUaGZyMGJscGFEdHdGN3VYbUNxVGNnWDRMeEx2M3NxY2tJMy1FQWpsclViUmdya1NxYjcxUmp1eUctVTRiYXpIQzFnckJuRVFDMUVfNHFZTzJyTjBTYVBSVUszQ0ZsdWNSOGJhYy1haWFRbUg3MkNtaXhLNndmZGM5bm8xVFRLcjQ3eHRzS3BaR0RTQXBVQnpSTTdpZF80SVFyd1hBN0VGRFJkUzNKYURGcWVuX0c5aFl6RDNJRFpxS0ZfeVN1MHVoVmNVRGF1T0NYNkMycDQxM2RxSzJhYTlnQk1aNHdRSmM3cW9FcFVEUGJvSFBuRGdsYUMyN3lZbDBLaTJ0ZFZUMWFxeS1oRWQ0SFl2NV84S05lZG5SN0R4NTcxajY3MjNnNEhCVklDdlRsRldkb0NqQklJS0x2UGJ5dFZZZndZSTd4TWxMSVFra2hnR3pFcW1LRnlNXzBFNGswdG12dW1SOU92VzAyQWJZNHR2NlNkZ1kyYkRXbVJPQkZxTjRuVEtUVG1KaDNieFMwUjJJS3JSWkhCVTg4UFdqQUpVYW56bzFPaGk5aTdTZG5HQ2FkbV95cjVlOTBvU3l4UU12Z2pldjA1Z3FCMHRrbzVXakdSWVA3NGhaVms3dVFzUC1rcHdmeC10ZmxBUXBvc2haYWRxcnR6X1pSNnVrVUYxdVQzQkJhSjFJNmpENzFHUVM4VU05eTJoZTJOY1lNYUswekpQY3BHcjA2ZVpSdzN5ZnpDZFFaVEI4a2lTalM0bjlzbmxDNFhnR25UNWoyY3pFS0xGUU54eVB6aXZ2Q2pqZ05Ja1BRZTAxbDJYS1h2Zm81ZW0wcUVOTmw5NHlHbmhCTnF6UXJqNkhUUXl3MC1TazAwQ0dIRnVsZmdjUTUwd0RQRWhTLV90dnM1bmVRenZTbUpnc3JXdmZZaU9SdThxM0JmcGRSRmF1NnpETGdFTHltM3FLV2M5MHZ0SmMzbDJ1NFllbzdVdE9LSTBFZ3VMVENUVlJMTFBIb2lfOXN0X2FJRnlZdndLTDNsekRnbm1yRGhISGk2NjcxX2trZEZxR3Y2UjlHeV9ZWGk4czkwM2VaNGNEa2JBQm9qMzJ5RUR6RmRiTEJPLWFfMWJTX1EyUTBxcGR6bUVpMjVxWUlmNk5Xdkx0NVhuRlZ3d1Q2YTJkY3dVVm9wbUVhUWNxLThWa2R3bkIxa0JpdHhYRTlpREluMDhsUFpHSzc4U0xhclRMTjNrVUVaV2FzNmxsclh3cEFyclFIa1gyeXg1YlJKWFQ4Q1NseHhEY194Y2Q3cDhaYXYxcURLeG41U0Z0cFZWUC11cUZmMjVLclRyc1kzam1XeV9fYmdJb3dvRGo1Rmp0SzV2akp1b0syOUlaTTZTVHFfZWJodlJOc01RcHFxeHBodVh3WkVFbGpKRjhydW56NFFEdy1FcllJR2xsLW85TUdVRE1ZVkhSNXRqMVJUQTRTbFJFTEo1NHV1RzVDR3NFczlaaldJTHhBTXBMZGF1S25kbXVXV3ByMlhfbjdDVy1TMFBBQjE1aUJwandmUXV2VGdoTHRHU2FsdjJPM29uSml1djdPdUVDSnNtWUdqNS1PZlFKbmdWT1hobEh3T1dTSlZpdG4ybzJKZWt5Tm1IdUNTZWdJQXc0c1FBZ2ZUUWtEQzBfTkZMZjdHdzIyaU5hUXFnNHpCRUZkcWJScHJZeGt2ek1XNFBCYzU1MVRqaTFPeEk3a2ZL)
      flutter: stable
      xcode: latest
      cocoapods: default
    cache: *cache
    scripts:
      - *script-check-ads-activated
      - name: "[iOS] Installing Pod dependencies"
        script: find . -name "Podfile" -execdir pod install \;
      - name: "[iOS] Set up code signing"
        script: |
          keychain initialize
          app-store-connect fetch-signing-files "za.co.smellsense" --type IOS_APP_DEVELOPMENT
          --create
          keychain add-certificates
      - name: "[iOS] Configure xcode profile"
        script: xcode-project use-profiles
      - *flutter-get-packages
      - name: "[Flutter] Build IPA"
        script: flutter build ipa --export-options-plist=/Users/builder/export_options.plist
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - "*.snap"
      - build/windows/**/*.msix
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - mattyoung305@gmail.com
